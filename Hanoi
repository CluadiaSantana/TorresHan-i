.eqv  
.data
Dir: .word 0x010010000
.text


addi s0,zero,5 #este es el numeo de discos que se utilizara
lui s1, %hi(Dir) # la torre A que es la de origen parte alta
lui s2, %hi(Dir) # la torre B que es la de origen parte alta
addi s2,s2,0x20 # la torre B que es la de origen 
lui s3, %hi(Dir) # la torre C que es la de origen parte alta
addi s3,s3, 0x40 # la torre C que es la de origen parte alta
add a0,zero,s0 # es el argumento que se pasara como numero de discos

main:
add t0,zero,a0 # se utilizara para saber cuando se ha inicializado la torre origen
Iniciar_Discos:
beq  t0, zero, continua #comprueba si ya se inicializo la torre ( cuando ya no haya discos que añadir) si es asi se pasa a la funcion hanoi
sw t0, 0(s1)#guardo el disco en la torre A
addi s1,s1,4
addi t0,t0,-1
jal zero,Iniciar_Discos
continua:
addi s1,s1,-4

Hanoi:
addi sp, sp, -20#depende a cuantos valores le vayamos a hacer push en este caso son 5
sw ra,0(sp) #hago push del ra para saber a donde saltar
sw s1,4(sp) # guardo la parte de arriba de la torre A
sw s2,8(sp) # guardo la parte de arriba de la torre B
sw s3,12(sp)# guardo la parte de arriba de la torre C
sw a0,16(sp)# guardo el numero de discos

############# hasta aqui esta bien
A1:
addi t1,zero,1
bne a0, t1, Hanoi_recursiva #comprueba si N es 1, si no paso a la seccion recursiva
lw t3,0(s1)#sacar disco de origen y lo pongo en destino 
sw t3,0(s3)
addi s3,s3,4
addi s1,s1,-4
jal zero,Return_potencia


Hanoi_recursiva:
add t2,zero,s2 # se intercambian B Y C para llamar a Hanoi(n-1,o,a,d)
add s2,zero,s3
add s3,zero,t2
addi a0,a0,-1#subi no existe, debemos sumar con un numero negativo. Decremento N
jal ra, Hanoi #Llamo Hanoi
lw t3,0(s1)#sacar disco de origen y lo pongo en destino 
sw t3,0(s3)
addi s3,s3,4
addi s1,s1,-4
add t2,zero,s1# se intercambian A Y B para llamar a Hanoi(n-1,a,d,o)
add s1,zero,s2
add s1,zero,t2
addi a0,a0,-1#subi no existe, debemos sumar con un numero negativo. Decremento N
jal ra, Hanoi #Llamo Hanoi

Return_potencia:
lw ra,0(sp) #hago push del ra para saber a donde saltar
lw s1,4(sp) # guardo la parte de arriba de la torre A
lw s2,8(sp) # guardo la parte de arriba de la torre B
lw s3,12(sp)# guardo la parte de arriba de la torre C
lw a0,16(sp)# guardo el numero de discos
addi sp, sp, 20 #depende a cuantos valores le vayamos a hacer pop 
jalr zero, ra, 0 #La linea de retorno de funcion  que ira hacia la potencia recursiva linea 39 o hacia la linea 16 segun si termina o no la recursividad
